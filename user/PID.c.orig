#include "stm32f10x.h"

#include "control.h"
#include "imuAPI.h"
#include "PID.h"
#include "RC.h"


#define Integral_max 2000.0f
#define remote_normal_value 1500 //遥控器各回中通道中立点数值 单位：ms


struct PITCH pitch;
struct ROLL roll;
struct YAW yaw;

float PID_Postion_Cal( PID_DATA *data)
{
    char Index = 0;

    data->error  = data->Input + data->Desire  - data->Measure  +  data->correct  ;     //Y轴（横滚）角度环控制
    data->Diff =  data->error -  data->lastError;     //误差的微分
    if(myabs(data->error) < data->IntDifZone) Index = 1;    //积分分离
    else  Index = 0;
    if(data->Integral > Integral_max) data->Integral = Integral_max;   //积分限幅
    if(data->Integral < -Integral_max) data->Integral = -Integral_max;
    if(CHdata[THR] < 1200) data->Integral = 0;   //油门低位 ，积分清零
    data->lastError = data->error;   //保存本次误差
    data->Output =  data->P * data->error +  Index * data->I *  data->Integral +  data->D *  data->Diff;  //计算
    return limf( data->Output , -data->OutLim, data->OutLim);  //限制
}

void PID_Set(PID_DATA *data,float Input,float Desire,float Measure,float Correct , float IntDifZone,float OutLim)
{
    data->Input = Input; 
data->Desire = Desire;    
    data->Measure = Measure;
    
    data->correct = Correct;
    data->IntDifZone = IntDifZone;
    data->OutLim = OutLim;
}

void parameterInit()
{
    pitch.outer.correct = 0;
    roll.outer.correct = 0;
    yaw.outer.correct = 0;

    pitch.inner.correct = 0;
    roll.inner.correct = 0;
    yaw.inner.correct = 0;

    pitch.outer.Output = 0;
    roll.outer.Output = 0;
    yaw.outer.Output = 0;

    pitch.inner.P  = 5.0f;   //40.00
    pitch.inner.I = 0.0f;
    pitch.inner.D = 0.0f;

    pitch.outer.P = 10.0f;    //1.0
    pitch.outer.I = 0.0f;
    pitch.outer.D = 20.0f;

    roll.inner.P = 2.0f;   //1.5
    roll.inner.I = 0.0f;
    roll.inner.D = 2.0f;  //40.0

    roll.outer.P = -3.0f;  //-2.0
    roll.outer.I = -0.01f;   //-0.01
    roll.outer.D = -2.0f;  //0.0


    yaw.inner.P = 10.0f;
    yaw.inner.I = 0.0f;
    yaw.inner.D = 5.0f;

    yaw.outer.P = 0.0f;
    yaw.outer.I = 0.0f;
    yaw.outer.D = 0.0f;
    
    lastgg.X = 0;
    lastgg.Y = 0;
    lastgg.Z = 0;

    State = Armed;  //默认锁定状态
    Mode = Stabilze;  //默认增稳模式


}

